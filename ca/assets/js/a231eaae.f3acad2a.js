"use strict";(self.webpackChunkyunohost_docs=self.webpackChunkyunohost_docs||[]).push([[7030],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var i=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},l=Object.keys(e);for(i=0;i<l.length;i++)a=l[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)a=l[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=i.createContext({}),p=function(e){var t=i.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(a),h=n,c=u["".concat(s,".").concat(h)]||u[h]||m[h]||l;return a?i.createElement(c,r(r({ref:t},d),{},{components:a})):i.createElement(c,r({ref:t},d))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,r=new Array(l);r[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:n,r[1]=o;for(var p=2;p<l;p++)r[p]=a[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}h.displayName="MDXCreateElement"},84284:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var i=a(87462),n=(a(67294),a(3905));const l={title:"App resources",template:"docs",taxonomy:{category:"docs"},routes:{default:"/packaging_apps_resources"}},r=void 0,o={unversionedId:"contribute/packaging_apps/resources/packaging_apps_resources",id:"contribute/packaging_apps/resources/packaging_apps_resources",title:"App resources",description:"Doc auto-generated by this script on 22/07/2023 (YunoHost version 11.2.3)",source:"@site/docs/06.contribute/10.packaging_apps/80.resources/15.packaging_apps_resources.md",sourceDirName:"06.contribute/10.packaging_apps/80.resources",slug:"/contribute/packaging_apps/resources/packaging_apps_resources",permalink:"/yunodocusaurus/ca/docs/contribute/packaging_apps/resources/packaging_apps_resources",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/06.contribute/10.packaging_apps/80.resources/15.packaging_apps_resources.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{title:"App resources",template:"docs",taxonomy:{category:"docs"},routes:{default:"/packaging_apps_resources"}},sidebar:"tutorialSidebar",previous:{title:"App helpers",permalink:"/yunodocusaurus/ca/docs/contribute/packaging_apps/resources/packaging_apps_helpers"},next:{title:"General scope of variables",permalink:"/yunodocusaurus/ca/docs/contribute/packaging_apps/resources/shell_variables_scope"}},s={},p=[{value:"Apt",id:"apt",level:2},{value:"Example",id:"example",level:5},{value:"Properties",id:"properties",level:5},{value:"Provision/Update",id:"provisionupdate",level:5},{value:"Deprovision",id:"deprovision",level:5},{value:"Data Dir",id:"data-dir",level:2},{value:"Example",id:"example-1",level:5},{value:"Properties",id:"properties-1",level:5},{value:"Provision/Update",id:"provisionupdate-1",level:5},{value:"Deprovision",id:"deprovision-1",level:5},{value:"Legacy management",id:"legacy-management",level:5},{value:"Database",id:"database",level:2},{value:"Example",id:"example-2",level:5},{value:"Properties",id:"properties-2",level:5},{value:"Provision/Update",id:"provisionupdate-2",level:5},{value:"Deprovision",id:"deprovision-2",level:5},{value:"Legacy management",id:"legacy-management-1",level:5},{value:"Install Dir",id:"install-dir",level:2},{value:"Example",id:"example-3",level:5},{value:"Properties",id:"properties-3",level:5},{value:"Provision/Update",id:"provisionupdate-3",level:5},{value:"Deprovision",id:"deprovision-3",level:5},{value:"Legacy management",id:"legacy-management-2",level:5},{value:"Permissions",id:"permissions",level:2},{value:"Example",id:"example-4",level:5},{value:"Properties (for each perm name)",id:"properties-for-each-perm-name",level:5},{value:"Provision/Update",id:"provisionupdate-4",level:5},{value:"Deprovision",id:"deprovision-4",level:5},{value:"Legacy management",id:"legacy-management-3",level:5},{value:"Ports",id:"ports",level:2},{value:"Example",id:"example-5",level:5},{value:"Properties (for every port name)",id:"properties-for-every-port-name",level:5},{value:"Provision/Update (for every port name)",id:"provisionupdate-for-every-port-name",level:5},{value:"Deprovision",id:"deprovision-5",level:5},{value:"Legacy management",id:"legacy-management-4",level:5},{value:"Sources",id:"sources",level:2},{value:"Example",id:"example-6",level:5},{value:"Properties (for each source)",id:"properties-for-each-source",level:5},{value:"Regarding <code>autoupdate</code>",id:"regarding-autoupdate",level:6},{value:"Provision/Update",id:"provisionupdate-5",level:5},{value:"Deprovision",id:"deprovision-6",level:5},{value:"System User",id:"system-user",level:2},{value:"Example",id:"example-7",level:5},{value:"Properties",id:"properties-4",level:5},{value:"Provision/Update",id:"provisionupdate-6",level:5},{value:"Deprovision",id:"deprovision-7",level:5}],d={toc:p},u="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,i.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Doc auto-generated by ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/YunoHost/yunohost/blob/465f6da5cd4d716bbcb802dfd742114083034235/doc/generate_resource_doc.py"},"this script")," on 22/07/2023 (YunoHost version 11.2.3)"),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"apt"},"Apt"),(0,n.kt)("p",null,"Create a virtual package in apt, depending on the list of specified packages that the app needs. The virtual packages is called ",(0,n.kt)("inlineCode",{parentName:"p"},"$app-ynh-deps")," (with ",(0,n.kt)("inlineCode",{parentName:"p"},"_")," being replaced by ",(0,n.kt)("inlineCode",{parentName:"p"},"-")," in the app name, see ",(0,n.kt)("inlineCode",{parentName:"p"},"ynh_install_app_dependencies"),")"),(0,n.kt)("h5",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml"},'[resources.apt]\npackages = ["nyancat", "lolcat", "sl"]\n\n# (this part is optional and corresponds to the legacy ynh_install_extra_app_dependencies helper)\nextras.yarn.repo = "deb https://dl.yarnpkg.com/debian/ stable main"\nextras.yarn.key = "https://dl.yarnpkg.com/debian/pubkey.gpg"\nextras.yarn.packages = ["yarn"]\n')),(0,n.kt)("h5",{id:"properties"},"Properties"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"packages"),": List of packages to be installed via ",(0,n.kt)("inlineCode",{parentName:"li"},"apt")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"packages_from_raw_bash"),": A multi-line bash snippet (using triple quotes as open/close) which should echo additional packages to be installed. Meant to be used for packages to be conditionally installed depending on architecture, debian version, install questions, or other logic."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"extras"),': A dict of (repo, key, packages) corresponding to "extra" repositories to fetch dependencies from')),(0,n.kt)("h5",{id:"provisionupdate"},"Provision/Update"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The code literally calls the bash helpers ",(0,n.kt)("inlineCode",{parentName:"li"},"ynh_install_app_dependencies")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"ynh_install_extra_app_dependencies"),", similar to what happens in v1."),(0,n.kt)("li",{parentName:"ul"},"Note that when ",(0,n.kt)("inlineCode",{parentName:"li"},"packages")," contains some phpX.Y-foobar dependencies, this will automagically define a ",(0,n.kt)("inlineCode",{parentName:"li"},"phpversion")," setting equal to ",(0,n.kt)("inlineCode",{parentName:"li"},"X.Y")," which can therefore be used in app scripts ($phpversion) or templates (",(0,n.kt)("inlineCode",{parentName:"li"},"__PHPVERSION__"),")")),(0,n.kt)("h5",{id:"deprovision"},"Deprovision"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The code literally calls the bash helper ",(0,n.kt)("inlineCode",{parentName:"li"},"ynh_remove_app_dependencies"))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"data-dir"},"Data Dir"),(0,n.kt)("p",null,"Creates a directory to be used by the app as the data store directory, typically where the app multimedia or large assets added by users are located. The corresponding path is stored in the settings as ",(0,n.kt)("inlineCode",{parentName:"p"},"data_dir"),". This resource behaves very similarly to install_dir."),(0,n.kt)("h5",{id:"example-1"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml"},"[resources.data_dir]\n# (empty - defaults are usually okay)\n")),(0,n.kt)("h5",{id:"properties-1"},"Properties"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"dir"),": (default: ",(0,n.kt)("inlineCode",{parentName:"li"},"/home/yunohost.app/__APP__"),") The full path of the data dir"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"subdirs"),": (default: empty list) A list of subdirs to initialize inside the data dir. For example, ",(0,n.kt)("inlineCode",{parentName:"li"},"['foo', 'bar']")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"owner"),": (default: ",(0,n.kt)("inlineCode",{parentName:"li"},"__APP__:rwx"),") The owner (and owner permissions) for the data dir"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"group"),": (default: ",(0,n.kt)("inlineCode",{parentName:"li"},"__APP__:rx"),") The group (and group permissions) for the data dir")),(0,n.kt)("h5",{id:"provisionupdate-1"},"Provision/Update"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"if the dir path changed and a folder exists at the old location, the folder will be ",(0,n.kt)("inlineCode",{parentName:"li"},"mv"),"'ed to the new location"),(0,n.kt)("li",{parentName:"ul"},"otherwise, creates the directory if it doesn't exists yet"),(0,n.kt)("li",{parentName:"ul"},"create each subdir declared and which do not exist already"),(0,n.kt)("li",{parentName:"ul"},"(re-)apply permissions (only on the folder itself and declared subdirs, not recursively)"),(0,n.kt)("li",{parentName:"ul"},"save the value of ",(0,n.kt)("inlineCode",{parentName:"li"},"dir")," as ",(0,n.kt)("inlineCode",{parentName:"li"},"data_dir")," in the app's settings, which can be then used by the app scripts (",(0,n.kt)("inlineCode",{parentName:"li"},"$data_dir"),") and conf templates (",(0,n.kt)("inlineCode",{parentName:"li"},"__DATA_DIR__"),")")),(0,n.kt)("h5",{id:"deprovision-1"},"Deprovision"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"(only if the purge option is chosen by the user) recursively deletes the directory if it exists"),(0,n.kt)("li",{parentName:"ul"},"also delete the corresponding setting")),(0,n.kt)("h5",{id:"legacy-management"},"Legacy management"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"In the past, the setting may have been called ",(0,n.kt)("inlineCode",{parentName:"li"},"datadir"),". The code will automatically rename it as ",(0,n.kt)("inlineCode",{parentName:"li"},"data_dir"),"."),(0,n.kt)("li",{parentName:"ul"},"As explained in the 'Provision/Update' section, the folder will also be moved if the location changed")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"database"},"Database"),(0,n.kt)("p",null,"Initialize a database, either using MySQL or Postgresql. Relevant DB infos are stored in settings ",(0,n.kt)("inlineCode",{parentName:"p"},"$db_name"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"$db_user")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"$db_pwd"),"."),(0,n.kt)("p",null,"NB: only one DB can be handled in such a way (is there really an app that would need two completely different DB ?...)"),(0,n.kt)("p",null,"NB2: no automagic migration will happen in an suddenly change ",(0,n.kt)("inlineCode",{parentName:"p"},"type")," from ",(0,n.kt)("inlineCode",{parentName:"p"},"mysql")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"postgresql")," or viceversa in its life"),(0,n.kt)("h5",{id:"example-2"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml"},'[resources.database]\ntype = "mysql"   # or : "postgresql". Only these two values are supported\n')),(0,n.kt)("h5",{id:"properties-2"},"Properties"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"type"),": The database type, either ",(0,n.kt)("inlineCode",{parentName:"li"},"mysql")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"postgresql"))),(0,n.kt)("h5",{id:"provisionupdate-2"},"Provision/Update"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"(Re)set the ",(0,n.kt)("inlineCode",{parentName:"li"},"$db_name")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"$db_user")," settings with the sanitized app name (replacing ",(0,n.kt)("inlineCode",{parentName:"li"},"-")," and ",(0,n.kt)("inlineCode",{parentName:"li"},".")," with ",(0,n.kt)("inlineCode",{parentName:"li"},"_"),")"),(0,n.kt)("li",{parentName:"ul"},"If ",(0,n.kt)("inlineCode",{parentName:"li"},"$db_pwd")," doesn't already exists, pick a random database password and store it in that setting"),(0,n.kt)("li",{parentName:"ul"},"If the database doesn't exists yet, create the SQL user and DB using ",(0,n.kt)("inlineCode",{parentName:"li"},"ynh_mysql_create_db")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"ynh_psql_create_db"),".")),(0,n.kt)("h5",{id:"deprovision-2"},"Deprovision"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Drop the DB using ",(0,n.kt)("inlineCode",{parentName:"li"},"ynh_mysql_remove_db")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"ynh_psql_remove_db")),(0,n.kt)("li",{parentName:"ul"},"Deletes the ",(0,n.kt)("inlineCode",{parentName:"li"},"db_name"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"db_user")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"db_pwd")," settings")),(0,n.kt)("h5",{id:"legacy-management-1"},"Legacy management"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"In the past, the sql passwords may have been named ",(0,n.kt)("inlineCode",{parentName:"li"},"mysqlpwd")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"psqlpwd"),", in which case it will automatically be renamed as ",(0,n.kt)("inlineCode",{parentName:"li"},"db_pwd"))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"install-dir"},"Install Dir"),(0,n.kt)("p",null,"Creates a directory to be used by the app as the installation directory, typically where the app sources and assets are located. The corresponding path is stored in the settings as ",(0,n.kt)("inlineCode",{parentName:"p"},"install_dir")),(0,n.kt)("h5",{id:"example-3"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml"},"[resources.install_dir]\n# (empty - defaults are usually okay)\n")),(0,n.kt)("h5",{id:"properties-3"},"Properties"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"dir"),": (default: ",(0,n.kt)("inlineCode",{parentName:"li"},"/var/www/__APP__"),") The full path of the install dir"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"owner"),": (default: ",(0,n.kt)("inlineCode",{parentName:"li"},"__APP__:rwx"),") The owner (and owner permissions) for the install dir"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"group"),": (default: ",(0,n.kt)("inlineCode",{parentName:"li"},"__APP__:rx"),") The group (and group permissions) for the install dir")),(0,n.kt)("h5",{id:"provisionupdate-3"},"Provision/Update"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"during install, the folder will be deleted if it already exists (FIXME: is this what we want?)"),(0,n.kt)("li",{parentName:"ul"},"if the dir path changed and a folder exists at the old location, the folder will be ",(0,n.kt)("inlineCode",{parentName:"li"},"mv"),"'ed to the new location"),(0,n.kt)("li",{parentName:"ul"},"otherwise, creates the directory if it doesn't exists yet"),(0,n.kt)("li",{parentName:"ul"},"(re-)apply permissions (only on the folder itself, not recursively)"),(0,n.kt)("li",{parentName:"ul"},"save the value of ",(0,n.kt)("inlineCode",{parentName:"li"},"dir")," as ",(0,n.kt)("inlineCode",{parentName:"li"},"install_dir")," in the app's settings, which can be then used by the app scripts (",(0,n.kt)("inlineCode",{parentName:"li"},"$install_dir"),") and conf templates (",(0,n.kt)("inlineCode",{parentName:"li"},"__INSTALL_DIR__"),")")),(0,n.kt)("h5",{id:"deprovision-3"},"Deprovision"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"recursively deletes the directory if it exists")),(0,n.kt)("h5",{id:"legacy-management-2"},"Legacy management"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"In the past, the setting was called ",(0,n.kt)("inlineCode",{parentName:"li"},"final_path"),". The code will automatically rename it as ",(0,n.kt)("inlineCode",{parentName:"li"},"install_dir"),"."),(0,n.kt)("li",{parentName:"ul"},"As explained in the 'Provision/Update' section, the folder will also be moved if the location changed")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"permissions"},"Permissions"),(0,n.kt)("p",null,"Configure the SSO permissions/tiles. Typically, webapps are expected to have a 'main' permission mapped to '/', meaning that a tile pointing to the ",(0,n.kt)("inlineCode",{parentName:"p"},"$domain/$path")," will be available in the SSO for users allowed to access that app."),(0,n.kt)("p",null,"Additional permissions can be created, typically to have a specific tile and/or access rules for the admin part of a webapp."),(0,n.kt)("p",null,"The list of allowed user/groups may be initialized using the content of the ",(0,n.kt)("inlineCode",{parentName:"p"},"init_{perm}_permission")," question from the manifest, hence ",(0,n.kt)("inlineCode",{parentName:"p"},"init_main_permission")," replaces the ",(0,n.kt)("inlineCode",{parentName:"p"},"is_public")," question and shall contain a group name (typically, ",(0,n.kt)("inlineCode",{parentName:"p"},"all_users")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"visitors"),")."),(0,n.kt)("h5",{id:"example-4"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml"},'[resources.permissions]\nmain.url = "/"\n# (these two previous lines should be enough in the majority of cases)\n\nadmin.url = "/admin"\nadmin.show_tile = false\nadmin.allowed = "admins"   # Assuming the "admins" group exists (cf future developments ;))\n')),(0,n.kt)("h5",{id:"properties-for-each-perm-name"},"Properties (for each perm name)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"url"),": The relative URI corresponding to this permission. Typically ",(0,n.kt)("inlineCode",{parentName:"li"},"/")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"/something"),". This property may be omitted for non-web permissions."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"show_tile"),": (default: ",(0,n.kt)("inlineCode",{parentName:"li"},"true")," if ",(0,n.kt)("inlineCode",{parentName:"li"},"url")," is defined) Wether or not a tile should be displayed for that permission in the user portal"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"allowed"),": (default: nobody) The group initially allowed to access this perm, if ",(0,n.kt)("inlineCode",{parentName:"li"},"init_{perm}_permission")," is not defined in the manifest questions. Note that the admin may tweak who is allowed/unallowed on that permission later on, this is only meant to ",(0,n.kt)("strong",{parentName:"li"},"initialize")," the permission."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"auth_header"),": (default: ",(0,n.kt)("inlineCode",{parentName:"li"},"true"),") Define for the URL of this permission, if SSOwat pass the authentication header to the application. Default is true"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"protected"),": (default: ",(0,n.kt)("inlineCode",{parentName:"li"},"false"),") Define if this permission is protected. If it is protected the administrator won't be able to add or remove the visitors group of this permission. Defaults to 'false'."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"additional_urls"),": (default: none) List of additional URL for which access will be allowed/forbidden")),(0,n.kt)("h5",{id:"provisionupdate-4"},"Provision/Update"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Delete any permissions that may exist and be related to this app yet is not declared anymore"),(0,n.kt)("li",{parentName:"ul"},"Loop over the declared permissions and create them if needed or update them with the new values")),(0,n.kt)("h5",{id:"deprovision-4"},"Deprovision"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Delete all permission related to this app")),(0,n.kt)("h5",{id:"legacy-management-3"},"Legacy management"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Legacy ",(0,n.kt)("inlineCode",{parentName:"li"},"is_public")," setting will be deleted if it exists")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"ports"},"Ports"),(0,n.kt)("p",null,"Book port(s) to be used by the app, typically to be used to the internal reverse-proxy between nginx and the app process."),(0,n.kt)("p",null,"Note that because multiple ports can be booked, each properties is prefixed by the name of the port. ",(0,n.kt)("inlineCode",{parentName:"p"},"main")," is a special name and will correspond to the setting ",(0,n.kt)("inlineCode",{parentName:"p"},"$port"),", whereas for example ",(0,n.kt)("inlineCode",{parentName:"p"},"xmpp_client")," will correspond to the setting ",(0,n.kt)("inlineCode",{parentName:"p"},"$port_xmpp_client"),"."),(0,n.kt)("h5",{id:"example-5"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml"},'[resources.ports]\n# (empty should be fine for most apps... though you can customize stuff if absolutely needed)\n\n\nmain.default = 12345    # if you really want to specify a prefered value .. but shouldnt matter in the majority of cases\n\nxmpp_client.default = 5222  # if you need another port, pick a name for it (here, "xmpp_client")\nxmpp_client.exposed = "TCP" # here, we\'re telling that the port needs to be publicly exposed on TCP on the firewall\n')),(0,n.kt)("h5",{id:"properties-for-every-port-name"},"Properties (for every port name)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"default"),": The prefered value for the port. If this port is already being used by another process right now, or is booked in another app's setting, the code will increment the value until it finds a free port and store that value as the setting. If no value is specified, a random value between 10000 and 60000 is used."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"exposed"),": (default: ",(0,n.kt)("inlineCode",{parentName:"li"},"false"),") Wether this port should be opened on the firewall and be publicly reachable. This should be kept to ",(0,n.kt)("inlineCode",{parentName:"li"},"false")," for the majority of apps than only need a port for internal reverse-proxying! Possible values: ",(0,n.kt)("inlineCode",{parentName:"li"},"false"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"true"),"(=",(0,n.kt)("inlineCode",{parentName:"li"},"Both"),"), ",(0,n.kt)("inlineCode",{parentName:"li"},"Both"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"TCP"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"UDP"),". This will result in the port being opened on the firewall, and the diagnosis checking that a program answers on that port."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"fixed"),": (default: ",(0,n.kt)("inlineCode",{parentName:"li"},"false"),") Tells that the app absolutely needs the specific value provided in ",(0,n.kt)("inlineCode",{parentName:"li"},"default"),", typically because it's needed for a specific protocol")),(0,n.kt)("h5",{id:"provisionupdate-for-every-port-name"},"Provision/Update (for every port name)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If not already booked, look for a free port, starting with the ",(0,n.kt)("inlineCode",{parentName:"li"},"default")," value (or a random value between 10000 and 60000 if no ",(0,n.kt)("inlineCode",{parentName:"li"},"default")," set)"),(0,n.kt)("li",{parentName:"ul"},"If ",(0,n.kt)("inlineCode",{parentName:"li"},"exposed")," is not ",(0,n.kt)("inlineCode",{parentName:"li"},"false"),", open the port in the firewall accordingly - otherwise make sure it's closed."),(0,n.kt)("li",{parentName:"ul"},"The value of the port is stored in the ",(0,n.kt)("inlineCode",{parentName:"li"},"$port")," setting for the ",(0,n.kt)("inlineCode",{parentName:"li"},"main")," port, or ",(0,n.kt)("inlineCode",{parentName:"li"},"$port_NAME")," for other ",(0,n.kt)("inlineCode",{parentName:"li"},"NAME"),"s")),(0,n.kt)("h5",{id:"deprovision-5"},"Deprovision"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Close the ports on the firewall if relevant"),(0,n.kt)("li",{parentName:"ul"},"Deletes all the port settings")),(0,n.kt)("h5",{id:"legacy-management-4"},"Legacy management"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"In the past, some settings may have been named ",(0,n.kt)("inlineCode",{parentName:"li"},"NAME_port")," instead of ",(0,n.kt)("inlineCode",{parentName:"li"},"port_NAME"),", in which case the code will automatically rename the old setting.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"sources"},"Sources"),(0,n.kt)("p",null,"Declare what are the sources / assets used by this app. Typically, this corresponds to some tarball published by the upstream project, that needs to be downloaded and extracted in the install dir using the ynh_setup_source helper."),(0,n.kt)("p",null,"This resource is intended both to declare the assets, which will be parsed by ynh_setup_source during the app script runtime, AND to prefetch and validate the sha256sum of those asset before actually running the script, to be able to report an error early when the asset turns out to not be available for some reason."),(0,n.kt)("p",null,"Various options are available to accomodate the behavior according to the asset structure"),(0,n.kt)("h5",{id:"example-6"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml"},'[resources.sources]\n\n    [resources.sources.main]\n    url = "https://github.com/foo/bar/archive/refs/tags/v1.2.3.tar.gz"\n    sha256 = "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b"\n\n    autoupdate.strategy = "latest_github_tag"\n')),(0,n.kt)("p",null,"Or more complex examples with several element, including one with asset that depends on the arch"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml"},'[resources.sources]\n\n    [resources.sources.main]\n    in_subdir = false\n    amd64.url = "https://github.com/foo/bar/archive/refs/tags/v1.2.3.amd64.tar.gz"\n    amd64.sha256 = "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b"\n    i386.url = "https://github.com/foo/bar/archive/refs/tags/v1.2.3.386.tar.gz"\n    i386.sha256 = "53c234e5e8472b6ac51c1ae1cab3fe06fad053beb8ebfd8977b010655bfdd3c3"\n    armhf.url = "https://github.com/foo/bar/archive/refs/tags/v1.2.3.arm.tar.gz"\n    armhf.sha256 = "4355a46b19d348dc2f57c046f8ef63d4538ebb936000f3c9ee954a27460dd865"\n\n    autoupdate.strategy = "latest_github_release"\n    autoupdate.asset.amd64 = ".*\\.amd64.tar.gz"\n    autoupdate.asset.i386 = ".*\\.386.tar.gz"\n    autoupdate.asset.armhf = ".*\\.arm.tar.gz"\n\n    [resources.sources.zblerg]\n    url = "https://zblerg.com/download/zblerg"\n    sha256 = "1121cfccd5913f0a63fec40a6ffd44ea64f9dc135c66634ba001d10bcf4302a2"\n    format = "script"\n    rename = "zblerg.sh"\n\n')),(0,n.kt)("h5",{id:"properties-for-each-source"},"Properties (for each source)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"prefetch")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"true")," (default) or ",(0,n.kt)("inlineCode",{parentName:"li"},"false"),", wether or not to pre-fetch this asset during the provisioning phase of the resource. If several arch-dependent url are provided, YunoHost will only prefetch the one for the current system architecture."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"url")," : the asset's URL",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"If the asset's URL depend on the architecture, you may instead provide ",(0,n.kt)("inlineCode",{parentName:"li"},"amd64.url"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"i386.url"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"armhf.url")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"arm64.url")," (depending on what architectures are supported), using the same ",(0,n.kt)("inlineCode",{parentName:"li"},"dpkg --print-architecture")," nomenclature as for the supported architecture key in the manifest"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"sha256")," : the asset's sha256sum. This is used both as an integrity check, and as a layer of security to protect against malicious actors which could have injected malicious code inside the asset...",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Same as ",(0,n.kt)("inlineCode",{parentName:"li"},"url")," : if the asset's URL depend on the architecture, you may instead provide ",(0,n.kt)("inlineCode",{parentName:"li"},"amd64.sha256"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"i386.sha256"),", ..."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"format"),' : The "format" of the asset. It is typically automatically guessed from the extension of the URL (or the mention of "tarball", "zipball" in the URL), but can be set explicitly:',(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"tar.gz"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"tar.xz"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"tar.bz2")," : will use ",(0,n.kt)("inlineCode",{parentName:"li"},"tar")," to extract the archive"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"zip")," : will use ",(0,n.kt)("inlineCode",{parentName:"li"},"unzip")," to extract the archive"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"docker")," : useful to extract files from an already-built docker image (instead of rebuilding them locally). Will use ",(0,n.kt)("inlineCode",{parentName:"li"},"docker-image-extract")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"whatever"),": whatever arbitrary value, not really meaningful except to imply that the file won't be extracted (eg because it's a .deb to be manually installed with dpkg/apt, or a script, or ...)"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"in_subdir"),": ",(0,n.kt)("inlineCode",{parentName:"li"},"true")," (default) or ",(0,n.kt)("inlineCode",{parentName:"li"},"false"),", depending on if there's an intermediate subdir in the archive before accessing the actual files. Can also be ",(0,n.kt)("inlineCode",{parentName:"li"},"N")," (an integer) to handle special cases where there's ",(0,n.kt)("inlineCode",{parentName:"li"},"N")," level of subdir to get rid of to actually access the files"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"extract")," : ",(0,n.kt)("inlineCode",{parentName:"li"},"true")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"false"),". Defaults to ",(0,n.kt)("inlineCode",{parentName:"li"},"true")," for archives such as ",(0,n.kt)("inlineCode",{parentName:"li"},"zip"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"tar.gz"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"tar.bz2"),", ... Or defaults to ",(0,n.kt)("inlineCode",{parentName:"li"},"false")," when ",(0,n.kt)("inlineCode",{parentName:"li"},"format")," is not something that should be extracted. When ",(0,n.kt)("inlineCode",{parentName:"li"},"extract = false"),", the file will only be ",(0,n.kt)("inlineCode",{parentName:"li"},"mv"),"ed to the location, possibly renamed using the ",(0,n.kt)("inlineCode",{parentName:"li"},"rename")," value"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"rename"),": some string like ",(0,n.kt)("inlineCode",{parentName:"li"},"whatever_your_want"),", to be used for convenience when ",(0,n.kt)("inlineCode",{parentName:"li"},"extract")," is ",(0,n.kt)("inlineCode",{parentName:"li"},"false")," and the default name of the file is not practical"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"platform"),": for example ",(0,n.kt)("inlineCode",{parentName:"li"},"linux/amd64")," (defaults to ",(0,n.kt)("inlineCode",{parentName:"li"},"linux/$YNH_ARCH"),") to be used in conjonction with ",(0,n.kt)("inlineCode",{parentName:"li"},'format = "docker"')," to specify which architecture to extract for")),(0,n.kt)("h6",{id:"regarding-autoupdate"},"Regarding ",(0,n.kt)("inlineCode",{parentName:"h6"},"autoupdate")),(0,n.kt)("p",null,"Strictly speaking, this has nothing to do with the actual app install. ",(0,n.kt)("inlineCode",{parentName:"p"},"autoupdate"),' is expected to contain metadata for automatic maintenance / update of the app sources info in the manifest. It is meant to be a simpler replacement for "autoupdate" Github workflow mechanism.'),(0,n.kt)("p",null,"The infos are used by this script : ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py"},"https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py")," which is ran by the YunoHost infrastructure periodically and will create the corresponding pull request automatically."),(0,n.kt)("p",null,"The script will rely on the code repo specified in the upstream section of the manifest."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"autoupdate.strategy")," is expected to be one of :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"latest_github_tag"),' : look for the latest tag (by sorting tags and finding the "largest" version). Then using the corresponding tar.gz url. Tags containing ',(0,n.kt)("inlineCode",{parentName:"li"},"rc"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"beta"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"alpha"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"start")," are ignored, and actually any tag which doesn't look like ",(0,n.kt)("inlineCode",{parentName:"li"},"x.y.z")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"vx.y.z")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"latest_github_release")," : similar to ",(0,n.kt)("inlineCode",{parentName:"li"},"latest_github_tags"),", but starting from the list of releases. Pre- or draft releases are ignored. Releases may have assets attached to them, in which case you can define:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'autoupdate.asset = "some regex"')," (when there's only one asset to use). The regex is used to find the appropriate asset among the list of all assets"),(0,n.kt)("li",{parentName:"ul"},"or several ",(0,n.kt)("inlineCode",{parentName:"li"},'autoupdate.asset.$arch = "some_regex"')," (when the asset is arch-specific). The regex is used to find the appropriate asset for the specific arch among the list of assets"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"latest_github_commit")," : will use the latest commit on github, and the corresponding tarball. If this is used for the 'main' source, it will also assume that the version is YYYY.MM.DD corresponding to the date of the commit.")),(0,n.kt)("p",null,"It is also possible to define ",(0,n.kt)("inlineCode",{parentName:"p"},"autoupdate.upstream")," to use a different Git(hub) repository instead of the code repository from the upstream section of the manifest. This can be useful when, for example, the app uses other assets such as plugin from a different repository."),(0,n.kt)("h5",{id:"provisionupdate-5"},"Provision/Update"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"For elements with ",(0,n.kt)("inlineCode",{parentName:"li"},"prefetch = true"),", will download the asset (for the appropriate architecture) and store them in ",(0,n.kt)("inlineCode",{parentName:"li"},"/var/cache/yunohost/download/$app/$source_id"),", to be later picked up by ",(0,n.kt)("inlineCode",{parentName:"li"},"ynh_setup_source"),". (NB: this only happens during install and upgrade, not restore)")),(0,n.kt)("h5",{id:"deprovision-6"},"Deprovision"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Nothing (just cleanup the cache)")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"system-user"},"System User"),(0,n.kt)("p",null,"Provision a system user to be used by the app. The username is exactly equal to the app id"),(0,n.kt)("h5",{id:"example-7"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml"},"[resources.system_user]\n# (empty - defaults are usually okay)\n")),(0,n.kt)("h5",{id:"properties-4"},"Properties"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"allow_ssh"),": (default: False) Adds the user to the ssh.app group, allowing SSH connection via this user"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"allow_sftp"),": (default: False) Adds the user to the sftp.app group, allowing SFTP connection via this user"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"allow_email"),": (default: False) Enable authentication on the mail stack for the system user and send mail using ",(0,n.kt)("inlineCode",{parentName:"li"},"__APP__@__DOMAIN__"),". A ",(0,n.kt)("inlineCode",{parentName:"li"},"mail_pwd")," setting is automatically defined (similar to ",(0,n.kt)("inlineCode",{parentName:"li"},"db_pwd")," for databases). You can then configure the app to use ",(0,n.kt)("inlineCode",{parentName:"li"},"__APP__")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"__MAIL_PWD__")," as SMTP credentials (with host 127.0.0.1). You can also tweak the user-part of the domain-part of the email used by manually defining a custom setting ",(0,n.kt)("inlineCode",{parentName:"li"},"mail_user")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"mail_domain")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"home"),": (default: ",(0,n.kt)("inlineCode",{parentName:"li"},"/var/www/__APP__"),") Defines the home property for this user. NB: unfortunately you can't simply use ",(0,n.kt)("inlineCode",{parentName:"li"},"__INSTALL_DIR__")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"__DATA_DIR__")," for now")),(0,n.kt)("h5",{id:"provisionupdate-6"},"Provision/Update"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"will create the system user if it doesn't exists yet"),(0,n.kt)("li",{parentName:"ul"},"will add/remove the ssh/sftp.app groups")),(0,n.kt)("h5",{id:"deprovision-7"},"Deprovision"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"deletes the user and group")))}m.isMDXComponent=!0}}]);